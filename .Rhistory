mean.matrix
View(mean.matrix)
View(mean.matrix)
View(sd.matrix)
adjacency_matrices[[1]][1,17]
b <- vector()
for( i in 1:735){
b[i] <- adjacency_matrices[[i]][1,17]
}
b
b[b!=0]
sd(b[b!=0])
for(j in 50:66){
for(k in 50:66){
b <- vector()
for( i in 1:735){
b[i] <- adjacency_matrices[[i]][j,k]
#if(length(b[b != 0]) == 0)
sd.matrix[j,k] <- sd(b[b != 0])
mean.matrix[j,k] <- mean(b[b != 0])
}
}
}
for( i in 1:735){
#b[i] <- adjacency_matrices[[i]]
print(dim(adjacency_matrices[[i]]))
}
for( i in 1:735){
#b[i] <- adjacency_matrices[[i]]
print(length(adjacency_matrices[[i]]))
}
for(j in 66:74){
for(k in 66:74){
b <- vector()
for( i in 1:735){
if(dim(adjacency_matrices[[i]])[1] < k | dim(adjacency_matrices[[i]])[1] < j)
{break()}
else{
b[i] <- adjacency_matrices[[i]][j,k]
#if(length(b[b != 0]) == 0)
sd.matrix[j,k] <- sd(b[b != 0])
mean.matrix[j,k] <- mean(b[b != 0])
}
}
}
}
plot(sd.matrix)
plot(mean.matrix)
plot(as.numeric(mean.matrix))
plot(as.numeric(sd.matrix))
write.csv(sd.matrix, file = "sd_matrix.csv", row.names = F)
write.csv(mean.matrix, file = "mean_matrix.csv", row.names = F)
hist(as.numeric(sd.matrix))
hist(as.numeric(mean.matrix))
wite.csv(network.timeline, file "network_timeline.csv", row.names = F)
wite.csv(network.timeline, file = "network_timeline.csv", row.names = F)
write.csv(network.timeline, file = "network_timeline.csv", row.names = F)
V(g)
degree(g)
network.timeline[[1]]
which(network.timeline[[1]]==1)
network.connectivity <- compute_network_connectivity(file_list)
source("network-functions.R")
network.connectivity <- compute_network_connectivity(file_list)
View(network.connectivity)
write.csv(network.connectivity, file = "network_timeline_connectivity.csv", row.names = F)
network.connectivity[1]
network.connectivity[3]
plot(network.connectivity[3])
plot(network.connectivity[,3])
plot(network.connectivity[,25])
library(tidyverse)
source("graph-functions.R")
source("network-functions.R")
source('~/Doc/traces/17-03-01_00-00-03-graph.R', echo=TRUE)
min(E(g, path = all_shortes_paths(g, 1 , V(g))$res[[2]])$bw)
min(E(g, path = all_shortest_paths(g, 1 , V(g))$res[[2]])$bw)
all_shortest_paths(g, 1 , V(g))
path 0 all_shortest_paths(g, 1 , V(g))
paths = all_shortest_paths(g, 1 , V(g))
length(path$res)
length(paths$res)
b <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
}
last.node <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
}
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
min.bw[i] <- min(E(g, path = all_shortest_paths(g, 1 , V(g))$res[[2]])$bw)
}
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
min.bw[i] <- min(E(g, path = all_shortest_paths(g, 1 , V(g))$res[[i]])$bw)
}
last.node <- vector()
min.bw <- vector()
for( i in 2:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
min.bw[i] <- min(E(g, path = all_shortest_paths(g, 1 , V(g))$res[[i]])$bw)
}
paths.bw <- data.frame(min.bw, last.node)
View(paths.bw)
E(g, path = all_shortest_paths(g, 1 , V(g))$res[[9]])$bw
E(g, path = all_shortest_paths(g, 1 , V(g))$res[[10]])$bw
a <- E(g, path = all_shortest_paths(g, 1 , V(g))$res[[10]])$bw
a <- a[!is.na(a)]
last.node <- vector()
min.bw <- vector()
for( i in 2:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, 1 , V(g))$res[[10]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
last.node <- vector()
min.bw <- vector()
for( i in 2:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, 1 , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
paths.w <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = Max(min.bw) )
library(tidyverse)
install.packages("stringi")
paths.w <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
library(tidyverse)
paths.w <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
View(paths.w)
rm(paths.bw)
paths.gw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
rm(paths.w)
paths.bw <- data.frame(min.bw, last.node)
paths.gw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
rm(paths.gw)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw <- sum(paths.bw$min.bw)
max.bw <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
max.bw <- vector()
for( j in 1:74){
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
if(i == j){break()}
else{
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, 1 , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
ax.bw <- vector()
for( j in 1:74){
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
if(i == j){break()}
else{
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
max.bw <- vector()
for( j in 1:2){
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
if(i == j){break()}
else{
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
max.bw
j <- 1
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
if(i == j){break()}
else{
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
if(i == j){break()}
else{
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
}
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
#if(i == j){break()}
else{
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
}
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
#if(i == j){break()}
#else{
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
#}
}
min(a)
min.bw[i] <- min(a)
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
paths.bw <- paths.bw[-j,] %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
max.bw <- vector()
for( j in 1:2){
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
if(i == j){break()}
else{
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw[-j,] %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
max.bw <- vector()
for( j in 1:2){
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw[-j,] %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
last.node
all_shortest_paths(g, j , V(g))$res[[65]])$bw
E(g, path = all_shortest_paths(g, j , V(g))$res[[65]])$bw
E(g, path = all_shortest_paths(g, j , V(g))$res[[66]])$bw
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[66]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
max.bw <- vector()
for( j in 1:2){
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw[-j,] %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
j <- 2
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
min.bw
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw[-j,] %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) )
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
paths.bw <- paths.bw[-j,] %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) ) %>%
filter(min.bw = Inf)
paths.bw <- paths.bw[-j,] %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) ) %>%
filter(min.bw == Inf)
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) ) %>%
filter(min.bw != Inf)
max.bw <- vector()
for( j in 1:2){
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) ) %>%
filter(min.bw != Inf)
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
max.bw <- vector()
for( j in 1:74){
last.node <- vector()
min.bw <- vector()
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) ) %>%
filter(min.bw != Inf)
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
E(g, path = all_shortest_paths(g, j , V(g))$res[[117]])$bw
E(g, path = all_shortest_paths(g, j , V(g))$res[[118]])$bw
length(paths$res)
all_shortest_paths(g, j , V(g))
max.bw <- vector()
for( j in 1:74){
last.node <- vector()
min.bw <- vector()
paths = all_shortest_paths(g, j , V(g))
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[118]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) ) %>%
filter(min.bw != Inf)
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
max.bw <- vector()
for( j in 1:74){
last.node <- vector()
min.bw <- vector()
paths = all_shortest_paths(g, j , V(g))
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = all_shortest_paths(g, j , V(g))$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) ) %>%
filter(min.bw != Inf)
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
for( j in 50:74){
last.node <- vector()
min.bw <- vector()
paths = all_shortest_paths(g, j , V(g))
for( i in 1:length(paths$res)){
p <- paths$res[[i]]
last.node[i] <- p[length(p)]
a <- E(g, path = paths$res[[i]])$bw
a <- a[!is.na(a)]
min.bw[i] <- min(a)
}
paths.bw <- data.frame(min.bw, last.node)
paths.bw <- paths.bw %>%
group_by(last.node) %>%
summarise(min.bw = max(min.bw) ) %>%
filter(min.bw != Inf)
max.bw[j] <- sum(paths.bw$min.bw[!is.na(paths.bw$min.bw)])
}
max.bw
network.connectivity <- compute_network_connectivity(file_list)
library(tidyverse)
source("graph-functions.R")
source("network-functions.R")
path = "/home/bill/Doc/traces"
file_list <- list.files(path, pattern = ".*\\.R", full.names=TRUE)
#print.plots(file_list)
network.connectivity <- compute_network_connectivity(file_list)
network.connectivity[1,]
plot(max.bw,network.connectivity[1,])
max.bw[71] <- NA
max.bw[72] <- NA
max.bw[73] <- NA
max.bw[74] <- NA
plot(max.bw,network.connectivity[1,])
lm(max.bw ~ network.connectivity[1,])
lm(max.bw ~ vector(network.connectivity[1,]))
lm(max.bw ~ as.vector(network.connectivity[1,]))
network.connectivity[1,]
as.array(network.connectivity[1,])
t(network.connectivity)
connections <- unlist(network.connectivity[1,])
plot(connections, max.bw)
lm(connections ~ max.bw)
lm <- lm(connections ~ max.bw)
lm
summary(lm)
source('~/Doc/traces/17-03-01_01-00-03-graph.R', echo=TRUE)
source('~/Doc/traces/17-03-01_00-00-03-graph.R', echo=TRUE)
View(network.connectivity)
View(network.connectivity)
summary(lm)
