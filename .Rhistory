install.packages("rJava")
install.packages("rJava")
library(rJava)
runif(1,10,1)
runif(1,1,10)
runif(1,1,10)
runif(1,1,10)
runif(1,1,10)
x = runif(10,1,10)
y=x*10
data=data.frame(y)
data$x=x
l.m=lm(data$y~data$x)
l.m
print(l.m)
a = print(l.m)
a
a[1]
a[2]
a[3]
a[4]
a[5]
a[6]
a[7]
a[8]
a[9]
l.m[1]
predict(l.m, 2)
l.m$coefficients
l.m$model
setwd("~/")
write.csv(data, "rJava.csv", row.names = FALSE)
install.packages("tidyverse")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
runif(1,0,1)
source('~/.active-rstudio-document', echo=TRUE)
b
10^10
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
(0.25)^10
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a <- read.csv("/home/bill/Doc/dynamic-vrp/savings/A-n32-k5.csv")
a
plot(a)
a <- read.csv("/home/bill/Doc/dynamic-vrp/savings/A-n32-k5.csv", row.names = F)
a
a <- read.csv("/home/bill/Doc/dynamic-vrp/savings/A-n32-k5.csv", header = F)
plot(a)
plot(as.vector(a))
as.vector(a)
a
length(a)
a <- as.vector(read.csv("/home/bill/Doc/dynamic-vrp/savings/A-n32-k5.csv", header = F))
plot(a, seq(1, length(a)))
seq(1, length(a)
seq(1, length(a))
seq(1, length(a))
seq(length(a))
length(a)
a <- as.vector(read.csv("/home/bill/Doc/dynamic-vrp/savings/A-n32-k5.csv", header = F))
a <- c(read.csv("/home/bill/Doc/dynamic-vrp/savings/A-n32-k5.csv", header = F))
a
plot(a, seq(length(a)))
plot(a)
plot(a[[1]])
plot(a[[1]], log = "y")
plot(a[[1]], log = "xy")
plot(a[[1]], log = "y")
plot(a[[1]])
source('~/.active-rstudio-document', echo=TRUE)
plot(a[[1]], log="y")
plot(a[[1]])
a <- c(read.csv("/home/bill/Doc/dynamic-vrp/savings/M-n200-k16.csv", header = F))
plot(a[[1]])
plot(a[[1]], log = "y")
plot(a[[1]], log = "xy")
a <- c(read.csv("/home/bill/Doc/dynamic-vrp/savings/P-n101-k4.csv", header = F))
plot(a[[1]], log = "y")
plot(a[[1]])
a <- c(read.csv("/home/bill/Doc/dynamic-vrp/savings/F-n135-k7.csv", header = F))
plot(a[[1]])
plot(a[[1]], log = "y")
plot(a[[1]])
install.packages("tidyverse")
install.packages("viridis")
source('~/Doc/traces/17-03-01_06-00-04-graph.R', echo=TRUE)
setwd("~/Doc/traces")
library(tidyverse)
library(viridis)
source("graph-functions.R")
source("network-functions.R")
setwd("~/Doc/volunteer-computing")
library(tidyverse)
library(viridis)
source("graph-functions.R")
source("network-functions.R")
source('~/Doc/traces/17-03-01_06-00-04-graph.R', echo=TRUE)
total.bw <- one_server_total_bandwidth(g)
total.bw
path = "/home/bill/Doc/traces"
file_list <- list.files(path, pattern = ".*\\.R", full.names=TRUE)
tbw <- list()
for(i in 1:10){
source(file_list[i])
tbw[i] <- one_server_total_bandwidth(g)
}
tbw
tbw <- list()
for(i in 1:10){
source(file_list[i])
tbw[[i]] <- one_server_total_bandwidth(g)
}
tbw
length(tbw)
for( i in 1:10){length(btw[[i]])}
for( i in 1:10){length(tbw[[i]])}
for( i in 1:10){print(length(tbw[[i]]))}
tbw <- list()
for(i in 1:200){
source(file_list[i])
tbw[[i]] <- one_server_total_bandwidth(g)
}
df <- data.frame(matrix(unlist(tbw), nrow=length(tbw), byrow=T))
df <- data.frame(t(sapply(tbw, c)))
df
View(df)
View(df)
df <- data.frame(t(sapply(tbw, r)))
df <- data.frame((sapply(tbw, c)))
df <- data.frame(Reduce(rbind, tbw))
df
df <- data.frame(Reduce(rbind, tbw), row.names = F)
plot(df$X1)
plot(df$X2)
plot(df$X3)
plot(df$X4)
plot(df$X5)
plot(df$X59)
plot(df$X11)
plot(df$X12)
plot(df$X13)
plot(df$X14)
plot(df$X15)
plot(df$X16)
plot(df$X17)
plot(df)
plot(df[,1:5])
plot(df[,1:10])
corr(df)
cor(df)
corr <- cor(df)
corr
View(corr)
View(corr)
plot(df$X17)
plot(df$X18)
plot(df$X20)
df[1]
plot(df[1])
plot(df$X1)
plot(df$X70)
plot(df$X60)
plot(df$X50)
df_melt = melt(df, id.vars = 'date')
ts.plot(df, gpars= list(col=rainbow(10)))
ts.plot(df[, 1:20], gpars= list(col=rainbow(10)))
ts.plot(df[, 1:10], gpars= list(col=rainbow(10)))
ts.plot(df[, 1:10], gpars= list(col=rainbow(2)))
ts.plot(df[, 1:10], gpars= list(col=viridis(10) ))
ts.plot(df[, 1:10], gpars= list(col=rainbow(10) ))
ts.plot(df[, 1:20], gpars= list(col=rainbow(20) ))
ts.plot(df[, 1], gpars= list(col=rainbow(20) ))
for(i in 1:20){
ts.plot(df[, 1], gpars= list(col=rainbow(20) ))
}
for(i in 1:20){
ts.plot(df[, i], gpars= list(col=rainbow(20) ))
}
