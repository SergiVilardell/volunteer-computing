compute_node_failure(file_list)
isolated.nodes
source("graph-functions.R")
source("/home/bill/Doc/traces/17-03-01_00-00-03-graph.R")
path = "/home/bill/Doc/traces"
file_list <- list.files(path, pattern = ".*\\.R", full.names=TRUE)
#print.plots(file_list)
isolated.nodes <- compute_node_failure(file_list)
c("GSgV-rb-fc89","GS-CanVies-b840","GS-RamblaBadal140-NS-11ce","GS26gener10-8710","GSAvMadrid5-nb-9a57","GSAvMadrid5-ns-7369","GSCallao3-d141","GSCerdanyola9-f705","GSConselldeCent12-a1ef","GSConstitucio174-02ed","GSEuropa16-5279","GSJBusquets24-50b4","GSRajolers10-6e45","GSTriado51-68b9","GSgV-nb-207c","GSgV-ns-a1a5","GSgranVia255-db37","GSmVictoria-992f","GSmVictoria-RK8da9","UPC-CN-C6-E104-Alix","UPC-CN-C6-E104-TL-WR841N-8a29","UPC-CN-C6-E206-Alix","UPC-CN-C6-E208-356c","UPC-CN-C6-E208-4964","UPC-CN-C6-E208-9d04","UPC-CN-C6-Terrat-Alix-e81c","UPC-CN-C6-Terrat-Rocket-bcee","UPC-CN-D6-116-4a5c","UPC-CN-Omega-cf70","UPC-CN-Vertex-Pangea-NS-1193","UPC-EETAC-d9f3","UPC-ETSEIB-NS-7094","UPClab104-tun-c632","Aitor","B2BJAVI73","BCN-GS-CanBruixa20-NSM5-e48b","BCN-GS-CanBruixa20-RKM5-7bbd","BCN-GS-CanBruixaRd6-2803","BCN-GS-JpTarradellas40-6a5f","BCN-GS-Salou2bis-3a56","BCN-Sagunt66-8971","BCNGranVia146Rd1-75a1","BCNJocsFlorals109-fe4c","BCNJocsFlorals148-6a1b","BCNJocsFloralsXXXRd1-6a8a","BCNMelciorPalau62-6a4c","BCNNogueraPallaresa15-ac8f","BCNNovell47-39be","BCNRobrenyo44-4658","BCNSagunt62-1667","BCNSantBaltassar25-7fe6","BCNSantaCatalina59Rd2-f500","BCNSantaCatalina59Rd3-805c","BCNSants186Rd1-993d","BCNSants186Rd2-996c","BCNSocors2-389c","BCNValladolid22-d906","BCNevaristoarnus5Rd4-988e","BCNevaristoarnus5Rd5-02b4","BCNevaristoarnus5Rd9-c239","BCNfeliucasanova24Rd1-e2d5","BCNmasnou24Rd1-d594","BCNmasnou24Rd2-8416","CSmng26--3707","HWBellchite-da28","HWCtraCollblanc157-0758","HWCtraCollblanc157-Rd2-ee8a","qMp-9600","qMpJ2G2p","qMp_j2g2")
beh <- as.data.frame(matrix(nrow = 735), ncol = 80)
View(beh)
beh <- as.data.frame(matrix(nrow = 735, ncol = 80))
for(i in 1:735){
for( j in 1:80){
if(j %in% isolated.nodes[i]){
beh[i][j] <- j
}
}
}
beh[1][1]
beh[1,1]
for(i in 1:735){
for( j in 1:80){
if(j %in% isolated.nodes[i]){
beh[i, j] <- F
}
else{
beh[i, j] <- T
}
}
}
44 %in% isolated.nodes[1]
44 %in% vector(isolated.nodes[1])
isolated.nodes[1]
class(isolated.nodes[1])
44 %in% isolated.nodes[1]
isolated.nodes[1]
isolated.nodes[1][1]
isolated.nodes[[1]]
44 %in% isolated.nodes[[1]]
beh <- as.data.frame(matrix(nrow = 735, ncol = 80))
for(i in 1:735){
for( j in 1:80){
if(j %in% isolated.nodes[[1]]){
beh[i, j] <- F
}
else{
beh[i, j] <- T
}
}
}
beh <- as.data.frame(matrix(nrow = 735, ncol = 80))
for(i in 1:735){
for( j in 1:80){
if(j %in% isolated.nodes[[i]]){
beh[i, j] <- F
}
else{
beh[i, j] <- T
}
}
}
max(isolated.nodes)
lapply(L1, function(x) isolated.nodes[which.max(abs(isolated.nodes))])
lapply(isolated.nodes, function(x) x[which.max(abs(x))])
g
beh <- as.data.frame(matrix(nrow = 735, ncol = 75))
for(i in 1:735){
for( j in 1:80){
if(j %in% isolated.nodes[[i]]){
beh[i, j] <- F
}
else{
beh[i, j] <- T
}
}
}
beh <- as.data.frame(matrix(nrow = 735, ncol = 75))
for(i in 1:735){
for( j in 1:75){
if(j %in% isolated.nodes[[i]]){
beh[i, j] <- F
}
else{
beh[i, j] <- T
}
}
}
View(beh)
View(beh)
g
as.numeric(V(g))
nodes <- list()
for( i in 1:length(file_list)){
source(file_list[i])
nodes[i] <- as.numeric(V(g))
}
as.numeric(V(g))
class(as.numeric(V(g)))
length((as.numeric(V(g))))
nodes <- list()
for( i in 1:length(file_list)){
source(file_list[i])
nodes[i] <- length((as.numeric(V(g))))
}
nodes
max(nodes)
source("graph-functions.R")
source("/home/bill/Doc/traces/17-03-01_00-00-03-graph.R")
path = "/home/bill/Doc/traces"
file_list <- list.files(path, pattern = ".*\\.R", full.names=TRUE)
#print.plots(file_list)
failed.nodes <- compute_failed_nodes(file_list)
active.nodes <- compute_active_nodes(file_list)
source("graph-functions.R")
source("network-functions.R")
network.timeline <- compute_network_timeline(failed.nodes, active.nodes)
View(network.timeline)
source("network-functions.R")
network.timeline <- compute_network_timeline(failed.nodes, active.nodes)
plot(network.timeline$V1)
plot(network.timeline$V44)
plot(network.timeline$V2)
plot(network.timeline$V3)
plot(network.timeline$V4)
plot(network.timeline$V5)
plot(network.timeline$V6)
plot(network.timeline$V70)
plot(network.timeline$V74)
plot(network.timeline$V64)
sum(network.timeline$V1, na.rm=TRUE)
sum(network.timeline$V64, na.rm=TRUE)
sum(network.timeline$V74, na.rm=TRUE)
sapply(network.timeline, function(x) sum(x, na.rm = TRUE) )
node.active.time <- sapply(network.timeline, function(x) sum(x, na.rm = TRUE)/735 )
node.active.time
plot(node.active.time)
plot(sort(node.active.time))
plot(node.active.time)
node.active.time %>%
summarise(LargestConsec = f1(V1, T))
library(tidyverse)
node.active.time %>%
summarise(LargestConsec = f1(V1, T))
network.timeline %>%
summarise(LargestConsec = f1(V1, T))
network.timeline %>%
summarise(LargestConsec = rle(T)))
network.timeline %>%
summarise(LargestConsec = rle(T))
rle(network.timeline$V1)
sequence(rle(network.timeline$V1)$lengths)
rle(network.timeline$V1)$lengths
rle(network.timeline$V1)
rle(network.timeline$V1))
rle(network.timeline$V1)
ave(network.timeline, cumsum(!network.timeline), FUN = cumsum)
ave(network.timeline$V1, cumsum(!network.timeline$V1), FUN = cumsum)
rle(network.timeline$V1)
seq(rle(network.timeline$V1))
ave(network.timeline$V1, cumsum(!network.timeline$V1), FUN = cumsum)
ave(network.timeline$V74, cumsum(!network.timeline$V74), FUN = cumsum)
seq(rle(network.timeline$V74))
rle(network.timeline$V74)
source("network-functions.R")
network.timeline <- compute_network_timeline(failed.nodes, active.nodes)
node.active.time <- sapply(network.timeline, function(x) sum(x, na.rm = TRUE)/735 )
node.active.time
plot(node.active.time)
beh <- network.timeline$V1
beh
cumsum <- vector()
cumsum[1] <- 2
cumsum <- vector()
seq(rle(network.timeline$V1))
rle(network.timeline$V1)
ave(network.timeline$V1, cumsum(!network.timeline$V1), FUN = cumsum)
ave(network.timeline$V1, cumsum(!network.timeline$V1), FUN = cumsum)
ave(network.timeline$V1, cumsum(!network.timeline$V1), cumsum)
ave(beh, cumsum(!beh), cumsum)
rle(beh)
seq(rle(beh))
seq(as.character(rle(beh)))
sequence(rle(as.character(network.timeline$V1))$lengths)
sequence(rle(as.character(network.timeline$V64))$lengths)
sequence(rle(as.character(network.timeline$V64)))
sequence(rle(as.character(network.timeline$V64)))
rle(as.character(network.timeline$V64))
rle(as.character(network.timeline$V64))$lengths
rle(as.character(network.timeline$V64==0))$lengths
rle(as.character(network.timeline$V64))$lengths
network.timeline[1]
dim(network.timeline)
rle(network.timeline$V64)$lengths
consecutive.active.time <- vector()
for(i in 1:dim(network.timeline)[1]){
consecutive.active.time[i] <- rle(network.timeline$V64)$lengths
}
consecutive.active.time
consecutive.active.time <- vector()
for(i in 1:dim(network.timeline)[1]){
consecutive.active.time[i] <- rle(network.timeline[i])$lengths
}
consecutive.active.time <- vector()
for(i in 1:dim(network.timeline)[1]){
consecutive.active.time[i] <- rle(vetor(network.timeline[i]))$lengths
}
consecutive.active.time <- vector()
for(i in 1:dim(network.timeline)[1]){
consecutive.active.time[i] <- rle(vector(network.timeline[i]))$lengths
}
a <- as.vector( network.timeline[i] )
View(a)
consecutive.active.time <- vector()
for(i in 1:dim(network.timeline)[1]){
a <- as.vector( network.timeline[i] )
consecutive.active.time[i] <- rle(a)$lengths
}
rle(a)
consecutive.active.time <- sapply(network.timeline, function(x) rle(x)$lengths)
View(consecutive.active.time)
a <- unlist(node.active.time)
a
node.active.time <- sapply(network.timeline, function(x) sum(x, na.rm = TRUE)/735 )
a <- unlist(consecutive.active.time)
plot(a)
hist(a)
plot(a)
sort(a)
plot(node.active.time)
rle(node.active.time$V5)
rle(network.timeline$V5)
consecutive.value <- sapply(network.timeline, function(x) rle(x)$value)
b <- unlist(consecutive.value)
for(i in 1:length(a)){
if(b[i]==0){
c[i] <- i
}
}
c[i]
c <- vector()
for(i in 1:length(a)){
if(b[i]==0){
c[i] <- i
}
}
b[i]
for(i in 1:length(a)){
if(!is.na(b[i]) && b[i]==0){
c[i] <- i
}
}
for(i in 1:length(a)){
if(!is.na(b[i]) && b[i]==0){
c[i] <- i
}
}
c <- vector()
for(i in 1:length(a)){
if(!is.na(b[i]) && b[i]==0){
c[i] <- i
}
}
c <- c[!is.na(c)]
active.consecutives <- a[-c]
plot(active.consecutives)
active.consecutives
a
consecutive.active.time
plot(hist(active.consecutives))
plot(hist(log(active.consecutives)))
plot(hist(active.consecutives))
plot(hist(active.consecutives), log = "xy")
plot(active.consecutives, log = "xy")
plot(sort(active.consecutives), log = "xy")
plot(sort(active.consecutives))
library(tidyverse)
source("graph-functions.R")
source("network-functions.R")
path = "/home/bill/Doc/traces"
file_list <- list.files(path, pattern = ".*\\.R", full.names=TRUE)
#print.plots(file_list)
failed.nodes <- compute_failed_nodes(file_list)
active.nodes <- compute_active_nodes(file_list)
network.timeline <- compute_network_timeline(failed.nodes, active.nodes)
node.active.time <- sapply(network.timeline, function(x) sum(x, na.rm = TRUE)/735 )
plot(node.active.time)
consecutive.active.time <- sapply(network.timeline, function(x) rle(x)$lengths)
consecutive.value <- sapply(network.timeline, function(x) rle(x)$value)
a <- unlist(consecutive.active.time)
b <- unlist(consecutive.value)
c <- vector()
for(i in 1:length(a)){
if(!is.na(b[i]) && b[i]==0){
c[i] <- i
}
}
c <- c[!is.na(c)]
active.consecutives <- a[-c]
View(network.timeline)
View(network.timeline)
plot(sort(active.consecutives))
plot(sort(t(active.consecutives)))
plot(hist(active.consecutives))
z <- as.numeric(table(active.consecutives))
z <- as.numeric(table(active.consecutives))
l <- as.numeric(names(z))
plot(l, z, log= "xy")
z <- as.numeric(table(active.consecutives))
l <- as.numeric(names(table(active.consecutives)))
plot(l, z, log= "xy")
summary(active.consecutives)
table(active.consecutives)
z <- hist(log(active.consecutives))
z <- hist(active.consecutives, breaks = exp(z$breaks))
plot(z$mids, z$counts, log = "xy")
hist(active.consecutives)
hist(log(active.consecutives))
barplot(active.consecutives)
barplot(table(active.consecutives))
component_distribution(g, cumulative = FALSE, mul.size = FALSE, ...)
component_distribution(g, cumulative = FALSE, mul.size = FALSE)
g <- graph(n=70, c(35,59,35,36,35,30,35,61,35,58,35,57,35,37,35,54,35,9,35,14,35,53,35,31,35,16,34,64,34,68,61,35,61,51,61,39,61,13,61,62,61,48,11,60,11,26,11,5,11,18,11,8,11,31,14,15,14,26,14,18,14,5,14,54,14,1,62,7,62,39,62,16,62,61,62,15,62,18,62,4,56,61,56,35,56,57,56,51,56,13,29,26,29,25,29,31,29,28,17,61,17,35,17,9,17,48,33,64,33,69,33,70,68,64,68,34,40,41,40,42,40,43,40,46,40,49,40,53,40,50,4,62,4,18,4,35,4,7,4,16,59,37,59,54,59,57,59,58,59,67,59,36,59,30,59,6,59,16,59,35,59,31,59,53,26,8,26,31,26,28,26,1,26,11,26,16,26,14,26,66,26,25,26,65,26,29,26,32,26,5,26,19,20,19,30,53,30,35,30,16,30,31,30,59,30,58,30,37,30,54,30,57,30,36,30,64,30,69,46,50,46,53,46,43,46,2,46,3,46,40,46,49,46,42,46,41,60,66,60,5,60,11,60,67,55,8,55,54,52,13,52,38,52,51,52,57,52,45,5,6,5,26,5,14,5,12,5,60,5,11,36,35,36,16,36,31,36,10,36,53,36,58,36,37,36,54,36,57,36,30,36,67,36,6,36,59,37,16,37,35,37,31,37,53,37,57,37,54,37,58,37,30,37,36,37,59,47,57,47,36,47,38,2,40,2,53,2,41,2,43,2,46,67,28,67,36,67,16,67,18,67,59,67,6,67,66,31,26,31,59,31,36,31,30,31,54,31,37,31,57,31,58,31,66,31,53,31,25,31,28,31,16,31,35,65,26,3,50,3,14,3,53,3,40,3,46,3,43,9,17,9,7,9,51,9,35,69,30,69,64,69,33,69,70,45,52,45,53,45,38,28,6,28,26,28,29,28,65,28,67,28,25,28,15,28,66,28,14,28,16,28,31,27,19,27,25,57,37,57,54,57,58,57,30,57,36,57,59,57,52,57,16,57,35,57,31,57,38,57,47,57,53,21,24,21,27,21,22,21,19,21,23,58,53,58,31,58,35,58,16,58,59,58,36,58,30,58,57,58,37,58,54,42,43,42,46,42,41,42,53,42,50,42,40,42,17,39,62,39,4,39,9,39,16,39,7,39,67,18,67,18,16,18,6,18,15,18,62,25,65,25,29,25,32,25,26,25,19,25,28,25,1,25,31,25,27,25,66,25,14,53,30,53,36,53,41,53,50,53,2,53,31,53,46,53,59,53,49,53,40,53,58,53,57,53,37,53,54,53,43,53,35,53,3,53,16,6,36,6,28,6,67,6,17,6,5,6,18,6,59,19,26,19,23,19,32,19,21,19,20,19,25,19,1,19,27,49,43,49,46,49,40,49,50,49,53,66,67,66,31,66,60,66,26,10,36,10,16,10,35,10,6,10,15,10,59,16,1,16,31,16,18,16,53,16,17,16,36,16,30,16,67,16,39,16,4,16,62,16,28,16,35,16,10,16,58,16,7,16,37,16,57,16,54,16,59,54,30,54,36,54,37,54,57,54,58,54,59,54,52,54,55,54,12,54,8,54,31,54,16,54,35,54,53,54,14,13,56,13,57,13,51,13,35,13,61,13,9,13,17,7,16,7,9,7,4,7,15,7,62,8,54,8,51,8,11,8,12,8,55,8,26,1,16,1,15,1,26,1,14,1,32,1,25,1,19,50,43,50,46,50,53,50,17,50,42,50,41,50,49,50,40,23,24,23,21,23,22,23,19,38,52,38,45,38,57,15,62,15,59,15,6,15,36,15,67,15,17,15,18,15,14,15,16,15,1,15,28,51,62,51,48,51,52,51,9,51,56,51,61,51,13,43,53,43,50,43,46,43,2,43,3,43,5,43,40,43,49,43,41,43,42,64,69,64,30,64,68,64,34,64,33,41,67,41,43,41,46,41,2,41,40,41,53,41,50,48,35,48,61,48,54,48,51,48,17,32,26,32,25,32,19,32,1,22,23,22,24,22,21,12,5,12,55,12,8,12,51,12,54,24,19,24,23,24,21,24,27,24,22,70,69,70,33), directed=TRUE) ;
component_distribution(g, cumulative = FALSE, mul.size = FALSE)
g <- graph(n=70, c(35,59,35,36,35,30,35,61,35,58,35,57,35,37,35,54,35,9,35,14,35,53,35,31,35,16,34,64,34,68,61,35,61,51,61,39,61,13,61,62,61,48,11,60,11,26,11,5,11,18,11,8,11,31,14,15,14,26,14,18,14,5,14,54,14,1,62,7,62,39,62,16,62,61,62,15,62,18,62,4,56,61,56,35,56,57,56,51,56,13,29,26,29,25,29,31,29,28,17,61,17,35,17,9,17,48,33,64,33,69,33,70,68,64,68,34,40,41,40,42,40,43,40,46,40,49,40,53,40,50,4,62,4,18,4,35,4,7,4,16,59,37,59,54,59,57,59,58,59,67,59,36,59,30,59,6,59,16,59,35,59,31,59,53,26,8,26,31,26,28,26,1,26,11,26,16,26,14,26,66,26,25,26,65,26,29,26,32,26,5,26,19,20,19,30,53,30,35,30,16,30,31,30,59,30,58,30,37,30,54,30,57,30,36,30,64,30,69,46,50,46,53,46,43,46,2,46,3,46,40,46,49,46,42,46,41,60,66,60,5,60,11,60,67,55,8,55,54,52,13,52,38,52,51,52,57,52,45,5,6,5,26,5,14,5,12,5,60,5,11,36,35,36,16,36,31,36,10,36,53,36,58,36,37,36,54,36,57,36,30,36,67,36,6,36,59,37,16,37,35,37,31,37,53,37,57,37,54,37,58,37,30,37,36,37,59,47,57,47,36,47,38,2,40,2,53,2,41,2,43,2,46,67,28,67,36,67,16,67,18,67,59,67,6,67,66,31,26,31,59,31,36,31,30,31,54,31,37,31,57,31,58,31,66,31,53,31,25,31,28,31,16,31,35,65,26,3,50,3,14,3,53,3,40,3,46,3,43,9,17,9,7,9,51,9,35,69,30,69,64,69,33,69,70,45,52,45,53,45,38,28,6,28,26,28,29,28,65,28,67,28,25,28,15,28,66,28,14,28,16,28,31,27,19,27,25,57,37,57,54,57,58,57,30,57,36,57,59,57,52,57,16,57,35,57,31,57,38,57,47,57,53,21,24,21,27,21,22,21,19,21,23,58,53,58,31,58,35,58,16,58,59,58,36,58,30,58,57,58,37,58,54,42,43,42,46,42,41,42,53,42,50,42,40,42,17,39,62,39,4,39,9,39,16,39,7,39,67,18,67,18,16,18,6,18,15,18,62,25,65,25,29,25,32,25,26,25,19,25,28,25,1,25,31,25,27,25,66,25,14,53,30,53,36,53,41,53,50,53,2,53,31,53,46,53,59,53,49,53,40,53,58,53,57,53,37,53,54,53,43,53,35,53,3,53,16,6,36,6,28,6,67,6,17,6,5,6,18,6,59,19,26,19,23,19,32,19,21,19,20,19,25,19,1,19,27,49,43,49,46,49,40,49,50,49,53,66,67,66,31,66,60,66,26,10,36,10,16,10,35,10,6,10,15,10,59,16,1,16,31,16,18,16,53,16,17,16,36,16,30,16,67,16,39,16,4,16,62,16,28,16,35,16,10,16,58,16,7,16,37,16,57,16,54,16,59,54,30,54,36,54,37,54,57,54,58,54,59,54,52,54,55,54,12,54,8,54,31,54,16,54,35,54,53,54,14,13,56,13,57,13,51,13,35,13,61,13,9,13,17,7,16,7,9,7,4,7,15,7,62,8,54,8,51,8,11,8,12,8,55,8,26,1,16,1,15,1,26,1,14,1,32,1,25,1,19,50,43,50,46,50,53,50,17,50,42,50,41,50,49,50,40,23,24,23,21,23,22,23,19,38,52,38,45,38,57,15,62,15,59,15,6,15,36,15,67,15,17,15,18,15,14,15,16,15,1,15,28,51,62,51,48,51,52,51,9,51,56,51,61,51,13,43,53,43,50,43,46,43,2,43,3,43,5,43,40,43,49,43,41,43,42,64,69,64,30,64,68,64,34,64,33,41,67,41,43,41,46,41,2,41,40,41,53,41,50,48,35,48,61,48,54,48,51,48,17,32,26,32,25,32,19,32,1,22,23,22,24,22,21,12,5,12,55,12,8,12,51,12,54,24,19,24,23,24,21,24,27,24,22,70,69,70,33), directed=TRUE) ;
g$date <- "01-03-17" ; g$time <- "00:00:06" ;
g$link <- "http://tomir.ac.upc.edu/qmpsu/index.php?cap=58b600f3" ;
g$file <- "17-03-01_00-00-03-qmpnodes-gather-info-perl-openssh.log.gz" ;
E(g)$layer <- c(3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,2,3,3,3,3,2,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,2,3,3,3) ;
E(g)$bw <- c(54.40,65.39,25.09,0.46,77.16,76.55,41.48,38.95,NA,NA,34.61,58.35,23.64,19.86,44.86,1.46,17.47,NA,1.15,90.27,0.38,0.19,NA,16.41,NA,NA,NA,86.13,27.65,NA,4.55,2.70,80.94,NA,31.73,29.85,89.00,NA,0.97,2.12,NA,NA,NA,34.45,NA,5.79,11.69,NA,NA,NA,NA,1.92,NA,NA,NA,NA,1.10,NA,NA,41.29,17.70,39.22,NA,2.93,22.68,1.09,NA,NA,32.29,29.26,80.60,45.53,74.74,85.48,NA,5.24,32.59,24.93,53.87,20.05,40.33,44.77,0.14,6.07,13.03,53.93,NA,NA,3.83,4.31,10.32,6.85,8.77,89.12,0.03,22.17,NA,39.88,37.93,10.44,50.00,36.22,39.82,47.69,21.82,45.50,39.24,8.24,2.92,24.89,24.06,8.78,2.03,0.69,37.84,9.23,10.33,0.00,0.49,10.84,0.40,NA,8.21,NA,NA,NA,78.87,NA,36.51,79.05,NA,12.29,NA,4.73,19.52,72.06,26.18,66.59,2.48,16.19,90.91,53.59,17.62,83.31,30.71,NA,26.33,9.65,27.75,33.47,41.65,29.52,66.73,43.48,62.45,33.42,58.96,60.46,19.41,NA,NA,NA,0.56,0.00,0.03,1.81,1.40,0.00,2.82,NA,NA,0.62,71.53,20.96,47.93,56.84,38.10,9.23,53.39,52.52,53.70,NA,25.02,4.80,1.72,18.13,60.65,6.53,NA,NA,4.50,NA,0.71,0.01,0.79,NA,0.12,NA,NA,NA,NA,NA,13.39,NA,17.70,2.08,13.91,NA,NA,3.31,7.92,4.98,NA,NA,8.43,0.57,12.51,0.66,70.36,55.71,86.03,31.04,87.23,91.12,NA,57.15,85.11,60.68,8.23,35.00,50.13,14.25,NA,17.18,3.13,15.50,45.17,39.12,50.10,29.90,88.87,83.88,35.03,79.24,95.63,57.44,0.25,5.11,NA,NA,0.04,43.95,NA,0.86,NA,NA,4.94,NA,NA,NA,21.48,0.15,33.49,2.13,NA,9.82,76.44,17.65,82.06,8.47,61.47,1.10,0.25,NA,NA,21.14,18.68,3.33,1.58,4.47,17.89,10.90,18.99,NA,4.21,29.26,16.23,17.31,73.89,2.36,23.23,4.97,14.16,26.63,2.41,NA,NA,79.01,2.37,32.43,89.89,NA,91.58,3.46,NA,0.32,79.39,4.98,0.82,1.84,NA,38.21,NA,86.02,0.09,1.73,5.74,2.10,NA,NA,NA,NA,NA,26.47,38.16,18.91,24.68,NA,2.19,28.02,3.24,17.46,19.84,37.95,21.17,31.59,NA,54.68,25.95,51.68,51.72,15.55,2.98,27.06,33.29,39.44,58.55,42.02,52.56,NA,NA,4.22,28.17,30.97,21.33,40.41,80.08,3.45,NA,NA,6.49,NA,1.59,NA,NA,21.83,NA,6.65,NA,NA,12.07,NA,NA,19.58,3.03,0.10,37.42,92.25,55.83,92.70,57.05,60.05,47.72,21.23,11.12,0.01,NA,0.53,0.00,40.88,11.53,22.01,16.73,24.28,NA,NA,21.30,26.71,NA,NA,NA,NA,NA,NA,31.87,86.32,NA,86.45,2.50,NA,NA,67.65,1.28,3.64,6.81,5.07,18.00,36.49,9.12,0.86,0.47,NA,24.61,2.55,0.00,5.70,11.33,7.25,3.58,NA,2.37,NA,0.02,0.59,0.20,NA,2.82,NA,NA,0.18,NA,NA,NA,78.18,86.27,92.61,61.06,18.26,23.68,17.65,NA,NA,15.02,NA,0.04,NA,19.30,11.99,NA,19.21,NA,NA) ;
component_distribution(g, cumulative = FALSE, mul.size = FALSE)
E(g)$bw
edge_connectivity(g)
get.edgelist(g)
barplot(table(active.consecutives), log= "y")
library(tidyverse)
source("graph-functions.R")
source("network-functions.R")
source("/home/bill/Doc/traces/17-03-01_00-00-03-graph.R")
path = "/home/bill/Doc/traces"
file_list <- list.files(path, pattern = ".*\\.R", full.names=TRUE)
#print.plots(file_list)
failed.nodes <- compute_failed_nodes(file_list)
active.nodes <- compute_active_nodes(file_list)
network.timeline <- compute_network_timeline(failed.nodes, active.nodes)
node.active.time <- sapply(network.timeline, function(x) sum(x, na.rm = TRUE)/735 )
plot(node.active.time)
consecutive.active.time <- sapply(network.timeline, function(x) rle(x)$lengths)
consecutive.value <- sapply(network.timeline, function(x) rle(x)$value)
a <- unlist(consecutive.active.time)
b <- unlist(consecutive.value)
c <- vector()
for(i in 1:length(a)){
if(!is.na(b[i]) && b[i]==0){
c[i] <- i
}
}
c <- c[!is.na(c)]
active.consecutives <- a[-c]
get.edgelist(g)
get.adjacency(g)
get.adjacency(g, attr = "bw")
adj.matrix <- get.adjacency(g, attr = "bw")
View(adj.matrix)
adj.matrix <-matrix(get.adjacency(g, attr = "bw"))
View(adj.matrix)
adj.matrix <- as.matrix(get.adjacency(g, attr = "bw"))
View(adj.matrix)
plot(adj.matrix)
adj.matrix <- as_adjacency_matrix(g, attr = "bw")
View(adj.matrix)
adj.matrix
adj.matrix[1]
adj.matrix[5]
adj.matrix[5][3]
adj.matrix[5,3]
head(adj.matrix)
adj.matrix[1][74]
g
adj.matrix[3][º9]
adj.matrix[3][19]
adj.matrix[3,19]
adj.matrix[3
]
adj.matrix[19]
adj.matrix <- as_adjacency_matrix(g, attr = "bw", sparse = F)
adj.sparse.matrix <- as_adjacency_matrix(g, attr = "bw")
object.size(adj.matrix)
object.size(adj.sparse.matrix)
View(adj.matrix)
View(adj.matrix)
adj.sparse.matrix[2,3]
library(tidyverse)
source("graph-functions.R")
source("network-functions.R")
path = "/home/bill/Doc/traces"
file_list <- list.files(path, pattern = ".*\\.R", full.names=TRUE)
#print.plots(file_list)
adjacency_matrices <- compute_adjacency_matrices(file_list)
adjacency_matrices[i] <- as_adjacency_matrix(g, attr = "bw")
adjacency_matrices[1] <- as_adjacency_matrix(g, attr = "bw")
library(Matrix)
install.packages("Matrix")
adj <- as_adjacency_matrix(g, attr = "bw")
adj <- Matrix(as_adjacency_matrix(g, attr = "bw"))
adj <- as.Matrix(as_adjacency_matrix(g, attr = "bw"))
adj <- Matrix(as_adjacency_matrix(g, attr = "bw"))
object.size(adj)
adj <- Matrix(as.matrix(as_adjacency_matrix(g, attr = "bw")))
object.size(adj)
adj <- as_adjacency_matrix(g, attr = "bw")
object.size(adj)
l[1] <- adj
l <- list()
l[1] <- adj
adj <- as_adjacency_matrix(g, attr = "bw", sparse = T)
adj
l[1] <- adj
adj <- as_adjacency_matrix(g, attr = "bw", sparse = T).__C__CsparseMatrix
as_adjacency_matrix(g, attr = "bw", sparse = T).__C__CsparseMatrix
adj.i
image(adj)
diag(adj)
writeMM(adj, "sparse_matrix")
aa <- readMM("sparse_matrix")
object.size(aa)
aa
adjacency_matrices <- compute_adjacency_matrices(file_list)
source("graph-functions.R")
source("network-functions.R")
adjacency_matrices <- compute_adjacency_matrices(file_list)
as.matrix(as_adjacency_matrix(g, attr = "bw"))
adjacency_matrices[1] <- as.matrix(as_adjacency_matrix(g, attr = "bw"))
image(adj)
lat <- as_adjacency_matrix(g, attr = "rtt")
image(lat)
adj[is.na(adj)] <- -1
adj
adj <- as_adjacency_matrix(g, attr = "bw")
adj[is.na(adj)] <- -1
adjacency_matrices[1] <- as.matrix(adj)
adjacency_matrices <- list()
adj <- as_adjacency_matrix(g, attr = "bw")
adj[is.na(adj)] <- -1
adjacency_matrices[1] <- as.matrix(adj)
as.matrix(adj)
adjacency_matrices[1] <- as.matrix(adj)
adj <- as.matrix(as_adjacency_matrix(g, attr = "bw"))
adj[is.na(adj)] <- -1
adjacency_matrices[1] <- as.matrix(adj)
adjacency_matrices[[1]] <- as_adjacency_matrix(g, attr = "bw")
source("graph-functions.R")
source("network-functions.R")
adjacency_matrices <- compute_adjacency_matrices(file_list)
source("graph-functions.R")
source("network-functions.R")
adjacency_matrices <- compute_adjacency_matrices(file_list)
adjacency_matrices[[1]][1,1]
for(i in 1:735){
print(adjacency_matrices[[1]][1,1])
}
for(i in 1:735){
print(adjacency_matrices[[1]][1,2])
}
View(lat)
lat
for(i in 1:735){
print(adjacency_matrices[[1]][1,70])
}
for(i in 1:735){
print(adjacency_matrices[[i]][1,70])
}
adjacency_matrices
adjacency_matrices[[1]]
adjacency_matrices[[2]]
adjacency_matrices[[700]]
adjacency_matrices[[735]]
for(i in 1:735){
print(adjacency_matrices[[i]][1,70])
}
for(i in 1:735){
print(adjacency_matrices[[i]][1,2])
}
lat
for(i in 1:735){
print(adjacency_matrices[[i]][10,1])
}
adjacency_matrices[[i]][1,10]
adjacency_matrices[[i]][10,1]
adjacency_matrices[[1]][10,1]
adjacency_matrices[[1]]
image(adjacency_matrices[[1]])
adjacency_matrices[[1]][15,1]
for(i in 1:735){
print(adjacency_matrices[[i]][15,1])
}
74*74*735
74*74
g.vcount()
vcount(g)
nodes <- vector()
for(i in 1:735){
source(file_list[i])
nodes[i] <- vcount(g)
}
plot(nodes)
library(tidyverse)
source("graph-functions.R")
source("network-functions.R")
source('~/Doc/traces/17-03-01_00-00-03-graph.R', echo=TRUE)
V(g)$x
plot(V(g)$x, V(g)$y)
